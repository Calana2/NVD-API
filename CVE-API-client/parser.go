package nvd

import (
	"encoding/json"
	"fmt"
	"net/http"
)

func (s *Client) CVESearch(query string) (*CVESearch, error) {
	// Request
  //fmt.Println("query: ",query)
  //fmt.Println("key: ",s.apiKey)
  fmt.Println(fmt.Sprintf("%s?%s",BaseURL,query))
	client := &http.Client{}
	req, err := http.NewRequest("GET", fmt.Sprintf("%s?%s", BaseURL, query), nil)
	if err != nil {
		return nil, err
	}
  if s.apiKey != "" {
   //fmt.Println("Using an API key...")
	 req.Header.Add("apiKey", s.apiKey) 
  }
	res, err := client.Do(req)
	if err != nil {
		return nil, err
	}
	defer res.Body.Close()

  if(res.StatusCode == 503) {
   return nil,fmt.Errorf("Query forbidden, wait 30 seconds.")
  }

	// JSON parse
	var ret CVESearch
	if err := json.NewDecoder(res.Body).Decode(&ret); err != nil {
		return nil, err
	}
	return &ret, nil
}
